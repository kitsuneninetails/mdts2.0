#!/bin/bash

set -x

# start_vm (string hypervisor_ns, string vm_ns_name, string vm_ns_ip, string vm_ns_gw)
start_vm() {
    HV_NS_NAME=$1
    VM_NS_NAME=$2
    VM_IFACE_IP=$3
    VM_IFACE_GW=$4

    VM_IFACE_HV_NAME=vethvm$VM_NS_NAME
    VM_IFACE_HV_NAME_PEER=$VM_IFACE_HV_NAME.p
    VM_IFACE_NAME=eth0

    sudo ip netns add $VM_NS_NAME
    sudo ip link add dev $VM_IFACE_HV_NAME type veth peer name $VM_IFACE_HV_NAME_PEER
    sudo ip link set dev $VM_IFACE_HV_NAME up netns $HV_NS_NAME name $VM_IFACE_HV_NAME
    sudo ip link set dev $VM_IFACE_HV_NAME_PEER up netns $VM_NS_NAME name $VM_IFACE_NAME
    sudo ip netns exec $VM_NS_NAME ip addr add $VM_IFACE_IP dev $VM_IFACE_NAME
    sudo ip netns exec $VM_NS_NAME ip link set dev lo up
    sudo ip netns exec $VM_NS_NAME ip link set dev $VM_IFACE_NAME up
    sudo ip netns exec $VM_NS_NAME ip route add 0.0.0.0/0 via $VM_IFACE_GW

}

# stop_vm (string hypervisor_ns, string vm_ns_name)
stop_vm() {
    HV_NS_NAME=$1
    VM_NS_NAME=$2

    VM_IFACE_HV_NAME=vethvm$VM_NS_NAME

    sudo ip netns exec $HV_NS_NAME ip link set dev $VM_IFACE_HV_NAME down
    sudo ip netns exec $HV_NS_NAME ip link del $VM_IFACE_HV_NAME
    sudo ip netns del $VM_NS_NAME

}

# start_host (string namespace_name, string iface_ip, string bridge_name, string bridge_ip)
start_host() {
    NS_NAME=$1
    MAIN_IFACE_IP=$2
    BRIDGE_NAME=$3
    BRIDGE_IP=$4

    MAIN_IFACE_LOCAL_NAME=veth$NS_NAME
    MAIN_IFACE_LOCAL_NAME_PEER=$MAIN_IFACE_LOCAL_NAME.peer
    MAIN_IFACE_NAME=eth0
    BRIDGE_GW=$(echo $BRIDGE_IP | sed -e 's/\([^\/]\+\)\/[0-9]\+/\1/')

    sudo ip link add dev $MAIN_IFACE_LOCAL_NAME type veth peer name $MAIN_IFACE_LOCAL_NAME_PEER
    sudo ip link set dev $MAIN_IFACE_LOCAL_NAME up
    sudo brctl addif $BRIDGE_NAME $MAIN_IFACE_LOCAL_NAME
    sudo ip netns add $NS_NAME
    sudo ip netns exec $NS_NAME ip link set dev lo up
    sudo ip link set dev $MAIN_IFACE_LOCAL_NAME_PEER up netns $NS_NAME name $MAIN_IFACE_NAME
    sudo ip netns exec $NS_NAME ip addr add $MAIN_IFACE_IP dev $MAIN_IFACE_NAME
    sudo ip netns exec $NS_NAME ip route add 0.0.0.0/0 via $BRIDGE_GW
}

# stop_host (string namespace_name, string bridge_name)
stop_host() {
    NS_NAME=$1
    BRIDGE_NAME=$2

    MAIN_IFACE_LOCAL_NAME=veth$NS_NAME

    sudo ip link set dev $MAIN_IFACE_LOCAL_NAME down
    sudo brctl delif $BRIDGE_NAME $MAIN_IFACE_LOCAL_NAME
    sudo ip netns del $NS_NAME
    sudo ip link del dev $MAIN_IFACE_LOCAL_NAME
}

# start_router(string router_ns_name, string port_name1, string router_ip_for_port1, 
#                                     string port_name2, string router_ip_for_port2, ...)
start_router() {

    NS_NAME=$1

    shift

    sudo ip netns add $NS_NAME

    sudo ip netns exec $NS_NAME ip link set dev lo up
    sudo ip netns exec $NS_NAME ip addr add 1.1.1.1/32 dev lo

    j=0
    while (( $# )); do
	PORT=$1
	IP=$2
	if [ ".$2" == "." ]; then
	    IP=127.0.0.1/32
	fi
	sudo ip link add dev veth$NS_NAME.0 type veth peer name veth$NS_NAME.p
	sudo ip link set dev veth$NS_NAME.0 up
	sudo ip link set dev veth$NS_NAME.0 up netns $NS_NAME name eth$j
	sudo ip link set dev veth$NS_NAME.p up netns $PORT name eth1
	sudo ip netns exec $NS_NAME ip addr add $IP dev eth$j
	shift 2
	((j++))
    done

    sudo ip netns exec $NS_NAME sh -c 'echo 0 >/proc/sys/net/ipv4/conf/all/rp_filter'
    sudo ip netns exec $NS_NAME sh -c 'echo 0 >/proc/sys/net/ipv4/conf/eth0/rp_filter'
    sudo ip netns exec $NS_NAME sh -c 'echo 0 >/proc/sys/net/ipv4/conf/eth1/rp_filter'
}

# stop_router(string router_ns_name)
stop_router() {
    NS_NAME=$1

    sudo ip netns del $NS_NAME

}

# start_bridge(string bridge_name, string bridge_ip)
start_bridge() {
    BRIDGE_NAME=$1
    BRIDGE_IP=$2

    NS_NAME=$3
    if [ "$NS_NAME." == "." ]; then
	sudo brctl addbr $BRIDGE_NAME
	sudo ip addr add $BRIDGE_IP dev $BRIDGE_NAME
	sudo ip link set dev $BRIDGE_NAME up
    else
	sudo ip netns exec $NS_NAME brctl addbr $BRIDGE_NAME
	sudo ip netns exec $NS_NAME ip addr add $BRIDGE_IP dev $BRIDGE_NAME
	sudo ip netns exec $NS_NAME ip link set dev $BRIDGE_NAME up
    fi

}

# stop_bridge(string bridge_name)
stop_bridge() {
    BRIDGE_NAME=$1
    NS_NAME=$2
    if [ "$NS_NAME." == "." ]; then
	sudo ip link set dev $BRIDGE_NAME down
	sudo brctl delbr $BRIDGE_NAME
    else
	sudo ip netns exec $NS_NAME ip link set dev $BRIDGE_NAME down
	sudo ip netns exec $NS_NAME brctl delbr $BRIDGE_NAME
    fi

}
